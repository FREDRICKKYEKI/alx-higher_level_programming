# 4-print_square.py - print_square(size)
===================================================
>>> print_square = __import__('4-print_square').print_square

>>> g_size = 4
>>> g1_size = 5
>>> g2_size = 10

>>> t_size = "9"
>>> n_size = -5
>>> f_size = 0.4
>>> fn_size = -0.6

# - Test Cases
================

# 0 - functional test
======================
>>> print_square(g_size)
####
####
####
####

>>> print_square(g1_size)
#####
#####
#####
#####
#####

>>> print_square(g2_size)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########


# 1 - TypeErrors
=================
	# 1.1 size must be `int`
	======================
	>>> print_square(t_size)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer


	# 1.3 if size is `float`
	=====================================
	>>> print_square(f_size)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer


	# 1.2 if size is `float` and size < 0
	=====================================
	>>> print_square(fn_size)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer


	# 1.3 if size < 0
	==================
	>>> print_square(n_size)
	Traceback (most recent call last):
	...
	ValueError: size must be >= 0
